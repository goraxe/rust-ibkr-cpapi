/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TrsrvSecdefScheduleGet200Response {
    /// Exchange parameter id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Reference on a trade venue of given exchange parameter
    #[serde(rename = "tradeVenueId", skip_serializing_if = "Option::is_none")]
    pub trade_venue_id: Option<String>,
    /// Always contains at least one 'tradingTime'  and zero or more 'sessionTime' tags
    #[serde(rename = "schedules", skip_serializing_if = "Option::is_none")]
    pub schedules: Option<Vec<models::TrsrvSecdefScheduleGet200ResponseSchedulesInner>>,
}

impl TrsrvSecdefScheduleGet200Response {
    pub fn new() -> TrsrvSecdefScheduleGet200Response {
        TrsrvSecdefScheduleGet200Response {
            id: None,
            trade_venue_id: None,
            schedules: None,
        }
    }
}

