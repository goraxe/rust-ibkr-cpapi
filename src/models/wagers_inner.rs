/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WagersInner : List of wagers
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WagersInner {
    #[serde(rename = "conid", skip_serializing_if = "Option::is_none")]
    pub conid: Option<f64>,
    #[serde(rename = "curr", skip_serializing_if = "Option::is_none")]
    pub curr: Option<String>,
    #[serde(rename = "desc", skip_serializing_if = "Option::is_none")]
    pub desc: Option<String>,
    #[serde(rename = "part", skip_serializing_if = "Option::is_none")]
    pub part: Option<String>,
}

impl WagersInner {
    /// List of wagers
    pub fn new() -> WagersInner {
        WagersInner {
            conid: None,
            curr: None,
            desc: None,
            part: None,
        }
    }
}

