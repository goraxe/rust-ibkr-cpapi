/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PositionInner : Account Information
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PositionInner {
    #[serde(rename = "acctId", skip_serializing_if = "Option::is_none")]
    pub acct_id: Option<String>,
    #[serde(rename = "conid", skip_serializing_if = "Option::is_none")]
    pub conid: Option<i32>,
    #[serde(rename = "contractDesc", skip_serializing_if = "Option::is_none")]
    pub contract_desc: Option<String>,
    #[serde(rename = "assetClass", skip_serializing_if = "Option::is_none")]
    pub asset_class: Option<String>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<f64>,
    #[serde(rename = "mktPrice", skip_serializing_if = "Option::is_none")]
    pub mkt_price: Option<f64>,
    #[serde(rename = "mktValue", skip_serializing_if = "Option::is_none")]
    pub mkt_value: Option<f64>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    #[serde(rename = "avgCost", skip_serializing_if = "Option::is_none")]
    pub avg_cost: Option<f64>,
    #[serde(rename = "avgPrice", skip_serializing_if = "Option::is_none")]
    pub avg_price: Option<f64>,
    #[serde(rename = "realizedPnl", skip_serializing_if = "Option::is_none")]
    pub realized_pnl: Option<f64>,
    #[serde(rename = "unrealizedPnl", skip_serializing_if = "Option::is_none")]
    pub unrealized_pnl: Option<f64>,
    #[serde(rename = "exchs", skip_serializing_if = "Option::is_none")]
    pub exchs: Option<String>,
    #[serde(rename = "expiry", skip_serializing_if = "Option::is_none")]
    pub expiry: Option<String>,
    #[serde(rename = "putOrCall", skip_serializing_if = "Option::is_none")]
    pub put_or_call: Option<String>,
    #[serde(rename = "multiplier", skip_serializing_if = "Option::is_none")]
    pub multiplier: Option<f64>,
    #[serde(rename = "strike", skip_serializing_if = "Option::is_none")]
    pub strike: Option<f64>,
    #[serde(rename = "exerciseStyle", skip_serializing_if = "Option::is_none")]
    pub exercise_style: Option<String>,
    #[serde(rename = "undConid", skip_serializing_if = "Option::is_none")]
    pub und_conid: Option<i32>,
    #[serde(rename = "conExchMap", skip_serializing_if = "Option::is_none")]
    pub con_exch_map: Option<Vec<String>>,
    #[serde(rename = "baseMktValue", skip_serializing_if = "Option::is_none")]
    pub base_mkt_value: Option<f64>,
    #[serde(rename = "baseMktPrice", skip_serializing_if = "Option::is_none")]
    pub base_mkt_price: Option<f64>,
    #[serde(rename = "baseAvgCost", skip_serializing_if = "Option::is_none")]
    pub base_avg_cost: Option<f64>,
    #[serde(rename = "baseAvgPrice", skip_serializing_if = "Option::is_none")]
    pub base_avg_price: Option<f64>,
    #[serde(rename = "baseRealizedPnl", skip_serializing_if = "Option::is_none")]
    pub base_realized_pnl: Option<f64>,
    #[serde(rename = "baseUnrealizedPnl", skip_serializing_if = "Option::is_none")]
    pub base_unrealized_pnl: Option<f64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "lastTradingDay", skip_serializing_if = "Option::is_none")]
    pub last_trading_day: Option<String>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    #[serde(rename = "sector", skip_serializing_if = "Option::is_none")]
    pub sector: Option<String>,
    #[serde(rename = "sectorGroup", skip_serializing_if = "Option::is_none")]
    pub sector_group: Option<String>,
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    #[serde(rename = "undComp", skip_serializing_if = "Option::is_none")]
    pub und_comp: Option<String>,
    #[serde(rename = "undSym", skip_serializing_if = "Option::is_none")]
    pub und_sym: Option<String>,
    #[serde(rename = "fullName", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    #[serde(rename = "pageSize", skip_serializing_if = "Option::is_none")]
    pub page_size: Option<i32>,
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<String>,
}

impl PositionInner {
    /// Account Information
    pub fn new() -> PositionInner {
        PositionInner {
            acct_id: None,
            conid: None,
            contract_desc: None,
            asset_class: None,
            position: None,
            mkt_price: None,
            mkt_value: None,
            currency: None,
            avg_cost: None,
            avg_price: None,
            realized_pnl: None,
            unrealized_pnl: None,
            exchs: None,
            expiry: None,
            put_or_call: None,
            multiplier: None,
            strike: None,
            exercise_style: None,
            und_conid: None,
            con_exch_map: None,
            base_mkt_value: None,
            base_mkt_price: None,
            base_avg_cost: None,
            base_avg_price: None,
            base_realized_pnl: None,
            base_unrealized_pnl: None,
            name: None,
            last_trading_day: None,
            group: None,
            sector: None,
            sector_group: None,
            ticker: None,
            und_comp: None,
            und_sym: None,
            full_name: None,
            page_size: None,
            model: None,
        }
    }
}

