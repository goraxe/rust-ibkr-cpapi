/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SsoValidateGet200Response {
    /// 1 for Live, 2 for Paper
    #[serde(rename = "LOGIN_TYPE", skip_serializing_if = "Option::is_none")]
    pub login_type: Option<f64>,
    /// Username
    #[serde(rename = "USER_NAME", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
    /// User ID
    #[serde(rename = "USER_ID", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<f64>,
    /// Time in milliseconds until session expires. Caller needs to call the again to re-validate session
    #[serde(rename = "expire", skip_serializing_if = "Option::is_none")]
    pub expire: Option<f64>,
    /// true if session was validated; false if not.
    #[serde(rename = "RESULT", skip_serializing_if = "Option::is_none")]
    pub result: Option<bool>,
    /// Time of session validation
    #[serde(rename = "AUTH_TIME", skip_serializing_if = "Option::is_none")]
    pub auth_time: Option<f64>,
}

impl SsoValidateGet200Response {
    pub fn new() -> SsoValidateGet200Response {
        SsoValidateGet200Response {
            login_type: None,
            user_name: None,
            user_id: None,
            expire: None,
            result: None,
            auth_time: None,
        }
    }
}

