/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverScannerParamsGet200Response {
    #[serde(rename = "scan_type_list", skip_serializing_if = "Option::is_none")]
    pub scan_type_list: Option<Vec<models::IserverScannerParamsGet200ResponseScanTypeListInner>>,
    #[serde(rename = "instrument_list", skip_serializing_if = "Option::is_none")]
    pub instrument_list: Option<Vec<models::IserverScannerParamsGet200ResponseInstrumentListInner>>,
    #[serde(rename = "filter_list", skip_serializing_if = "Option::is_none")]
    pub filter_list: Option<Vec<models::IserverScannerParamsGet200ResponseFilterListInner>>,
    #[serde(rename = "location_tree", skip_serializing_if = "Option::is_none")]
    pub location_tree: Option<Vec<models::IserverScannerParamsGet200ResponseLocationTreeInner>>,
}

impl IserverScannerParamsGet200Response {
    pub fn new() -> IserverScannerParamsGet200Response {
        IserverScannerParamsGet200Response {
            scan_type_list: None,
            instrument_list: None,
            filter_list: None,
            location_tree: None,
        }
    }
}

