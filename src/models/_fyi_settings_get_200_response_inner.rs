/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FyiSettingsGet200ResponseInner {
    /// optional, if A doesn't exist, it means user can't toggle this option. 0-off, 1-on.
    #[serde(rename = "A", skip_serializing_if = "Option::is_none")]
    pub a: Option<i32>,
    /// fyi code
    #[serde(rename = "FC", skip_serializing_if = "Option::is_none")]
    pub fc: Option<String>,
    /// disclaimer read, 1 = yes, = 0 no.
    #[serde(rename = "H", skip_serializing_if = "Option::is_none")]
    pub h: Option<i32>,
    /// detailed description
    #[serde(rename = "FD", skip_serializing_if = "Option::is_none")]
    pub fd: Option<String>,
    /// title
    #[serde(rename = "FN", skip_serializing_if = "Option::is_none")]
    pub r#fn: Option<String>,
}

impl FyiSettingsGet200ResponseInner {
    pub fn new() -> FyiSettingsGet200ResponseInner {
        FyiSettingsGet200ResponseInner {
            a: None,
            fc: None,
            h: None,
            fd: None,
            r#fn: None,
        }
    }
}

