/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FyiDeliveryoptionsGet200ResponseEInner : device
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FyiDeliveryoptionsGet200ResponseEInner {
    /// device name
    #[serde(rename = "NM", skip_serializing_if = "Option::is_none")]
    pub nm: Option<String>,
    /// device id
    #[serde(rename = "I", skip_serializing_if = "Option::is_none")]
    pub i: Option<String>,
    /// unique device id
    #[serde(rename = "UI", skip_serializing_if = "Option::is_none")]
    pub ui: Option<String>,
    /// device is enabled or not 0-true, 1-false.
    #[serde(rename = "A", skip_serializing_if = "Option::is_none")]
    pub a: Option<String>,
}

impl FyiDeliveryoptionsGet200ResponseEInner {
    /// device
    pub fn new() -> FyiDeliveryoptionsGet200ResponseEInner {
        FyiDeliveryoptionsGet200ResponseEInner {
            nm: None,
            i: None,
            ui: None,
            a: None,
        }
    }
}

