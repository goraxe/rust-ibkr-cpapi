/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountParent {
    #[serde(rename = "mmc", skip_serializing_if = "Option::is_none")]
    pub mmc: Option<Vec<String>>,
    /// Account Number for Money Manager Client
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Is MM a Parent Account
    #[serde(rename = "isMParent", skip_serializing_if = "Option::is_none")]
    pub is_m_parent: Option<bool>,
    /// Is MM a Child Account
    #[serde(rename = "isMChild", skip_serializing_if = "Option::is_none")]
    pub is_m_child: Option<bool>,
    /// Is a Multiplex Account. These are account models with individual account being parent and managed account being child.
    #[serde(rename = "isMultiplex", skip_serializing_if = "Option::is_none")]
    pub is_multiplex: Option<bool>,
}

impl AccountParent {
    pub fn new() -> AccountParent {
        AccountParent {
            mmc: None,
            account_id: None,
            is_m_parent: None,
            is_m_child: None,
            is_multiplex: None,
        }
    }
}

