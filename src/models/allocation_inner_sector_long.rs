/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AllocationInnerSectorLong : long positions allocation
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AllocationInnerSectorLong {
    #[serde(rename = "Others", skip_serializing_if = "Option::is_none")]
    pub others: Option<f64>,
    #[serde(rename = "Utilities", skip_serializing_if = "Option::is_none")]
    pub utilities: Option<f64>,
    #[serde(rename = "Energy", skip_serializing_if = "Option::is_none")]
    pub energy: Option<f64>,
    #[serde(rename = "Technology", skip_serializing_if = "Option::is_none")]
    pub technology: Option<f64>,
    #[serde(rename = "Financial", skip_serializing_if = "Option::is_none")]
    pub financial: Option<f64>,
    #[serde(rename = "Communications", skip_serializing_if = "Option::is_none")]
    pub communications: Option<f64>,
}

impl AllocationInnerSectorLong {
    /// long positions allocation
    pub fn new() -> AllocationInnerSectorLong {
        AllocationInnerSectorLong {
            others: None,
            utilities: None,
            energy: None,
            technology: None,
            financial: None,
            communications: None,
        }
    }
}

