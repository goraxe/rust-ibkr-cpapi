/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverAccountOrdersGet200Response {
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<Filters>>,
    #[serde(rename = "orders", skip_serializing_if = "Option::is_none")]
    pub orders: Option<Vec<models::IserverAccountOrdersGet200ResponseOrdersInner>>,
    /// If live order update is a snapshot
    #[serde(rename = "snapshot", skip_serializing_if = "Option::is_none")]
    pub snapshot: Option<bool>,
}

impl IserverAccountOrdersGet200Response {
    pub fn new() -> IserverAccountOrdersGet200Response {
        IserverAccountOrdersGet200Response {
            filters: None,
            orders: None,
            snapshot: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Filters {
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "pending_submit")]
    PendingSubmit,
    #[serde(rename = "pre_submitted")]
    PreSubmitted,
    #[serde(rename = "submitted")]
    Submitted,
    #[serde(rename = "filled")]
    Filled,
    #[serde(rename = "pending_cancel")]
    PendingCancel,
    #[serde(rename = "cancelled")]
    Cancelled,
    #[serde(rename = "warn_state")]
    WarnState,
    #[serde(rename = "sort_by_time")]
    SortByTime,
}

impl Default for Filters {
    fn default() -> Filters {
        Self::Inactive
    }
}

