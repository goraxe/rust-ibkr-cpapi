/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HistoryResultBarsDataInner {
    /// Time - Formatted in unix time in ms.
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<f64>,
    /// Open - First price returned for bar value.
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<f64>,
    /// Close - Last price returned for bar value.
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<f64>,
    /// High - High price returned for bar value.
    #[serde(rename = "h", skip_serializing_if = "Option::is_none")]
    pub h: Option<f64>,
    /// Low - Last price returned for bar value.
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<f64>,
    /// Volume - Traded volume for bar value.
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<f64>,
}

impl HistoryResultBarsDataInner {
    pub fn new() -> HistoryResultBarsDataInner {
        HistoryResultBarsDataInner {
            t: None,
            o: None,
            c: None,
            h: None,
            l: None,
            v: None,
        }
    }
}

