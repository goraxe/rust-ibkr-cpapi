/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverContractConidAlgosGet200ResponseInner {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<models::IserverContractConidAlgosGet200ResponseInnerParametersInner>>,
}

impl IserverContractConidAlgosGet200ResponseInner {
    pub fn new() -> IserverContractConidAlgosGet200ResponseInner {
        IserverContractConidAlgosGet200ResponseInner {
            name: None,
            description: None,
            id: None,
            parameters: None,
        }
    }
}

