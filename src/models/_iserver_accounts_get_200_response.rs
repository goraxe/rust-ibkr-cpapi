/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverAccountsGet200Response {
    /// Unique account id
    #[serde(rename = "accounts", skip_serializing_if = "Option::is_none")]
    pub accounts: Option<Vec<String>>,
    /// Account Id and its alias
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<serde_json::Value>,
    #[serde(rename = "selectedAccount", skip_serializing_if = "Option::is_none")]
    pub selected_account: Option<String>,
}

impl IserverAccountsGet200Response {
    pub fn new() -> IserverAccountsGet200Response {
        IserverAccountsGet200Response {
            accounts: None,
            aliases: None,
            selected_account: None,
        }
    }
}

