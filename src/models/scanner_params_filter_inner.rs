/*
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ScannerParamsFilterInner : Contains list of supported filters. The code of the filter along with user-specified value has to be sued to apply a filter to scanner query. For example - [{\"code\":\"usdVolume\",\"value\":500}]. You can also specify multiple filters - \"filter\":[{\"code\":\"value\"},{\"code\":\"value\"},{\"code\":\"value\"}]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScannerParamsFilterInner {
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f64>,
}

impl ScannerParamsFilterInner {
    /// Contains list of supported filters. The code of the filter along with user-specified value has to be sued to apply a filter to scanner query. For example - [{\"code\":\"usdVolume\",\"value\":500}]. You can also specify multiple filters - \"filter\":[{\"code\":\"value\"},{\"code\":\"value\"},{\"code\":\"value\"}]
    pub fn new() -> ScannerParamsFilterInner {
        ScannerParamsFilterInner {
            code: None,
            value: None,
        }
    }
}

